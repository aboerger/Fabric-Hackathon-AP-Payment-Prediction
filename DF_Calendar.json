{"name":"DF_Calendar","ppdf:dataflowId":"6d45a28f-d5d7-42e9-bfe7-a1edb2f63de8","ppdf:owner":{"tenantId":"90c56ca2-d892-45ce-810d-6cf368facdb3","userId":"0c0bc9a9-2163-4dfe-8380-dffe9bae854a"},"ppdf:fastCopy":false,"version":"1.0","culture":"en-US","modifiedTime":"2024-03-03T02:51:51.5326881+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":false,"queriesMetadata":{"calendar":{"queryId":"b77ee57d-65e1-4eac-96bd-9ffacfc1f7b1","queryName":"calendar","loadEnabled":true},"calendar_DataDestination":{"queryId":"9c6a17c5-0f14-4d87-b7ae-7d43bc608429","queryName":"calendar_DataDestination"},"calendar_WriteToDataDestination":{"queryId":"c9aeb8e7-26e1-492a-b834-30305e43d3b9","queryName":"calendar_WriteToDataDestination"},"calendar_TransformForWriteToDataDestination":{"queryId":"afae8983-a642-4c69-88d3-17d69fb2b055","queryName":"calendar_TransformForWriteToDataDestination"}},"document":"section Section1;\r\n[Staging = \"DefaultStaging\"]\r\nshared calendar = let\n        startDate = #date(2020, 1, 1),\n        endDate = #date(2026, 1, 1),\n        numberOfDays = Duration.Days(endDate - startDate) + 1,\n        dateList = List.Dates(startDate, numberOfDays, #duration(1, 0, 0, 0)),\n        dateTable = Table.FromList(dateList, Splitter.SplitByNothing(), {\"Date\"}),\n        #\"Changed Type\" = Table.TransformColumnTypes(dateTable, {{\"Date\", type date}}),\n        #\"Added Custom Columns\" = Table.AddColumn(#\"Changed Type\", \"Month\", each Date.Month([Date]), Int64.Type),\n        #\"Added Custom Columns0\" = Table.AddColumn(#\"Added Custom Columns\", \"Month Name\", each Date.ToText([Date], \"MMMM\")),\n        #\"Added Custom Columns1\" = Table.AddColumn(#\"Added Custom Columns0\", \"Month Name Short\", each Date.ToText([Date], \"MMM\")),\n        #\"Added Custom Columns2\" = Table.AddColumn(#\"Added Custom Columns1\", \"Quarter\", each Date.QuarterOfYear([Date]), Int64.Type),\n        #\"Added Custom Columns3\" = Table.AddColumn(#\"Added Custom Columns2\", \"Year\", each Date.Year([Date]), Int64.Type),\n        #\"Added Custom Columns4\" = Table.AddColumn(#\"Added Custom Columns3\", \"Is After Current Date\", each [Date] > DateTime.Date(DateTime.LocalNow())),\n        #\"Added Custom Columns5\" = Table.AddColumn(#\"Added Custom Columns4\", \"Week\", each Date.WeekOfYear([Date]), Int64.Type),\n        #\"Added Custom Columns6\" = Table.AddColumn(#\"Added Custom Columns5\", \"Day of Week\", each Date.DayOfWeek([Date]) + 1, Int64.Type),\n        #\"Day name\" = Table.AddColumn(#\"Added Custom Columns6\", \"Day of Week Name\", each Date.DayOfWeekName([Date]), type text),\r\n  #\"Added custom\" = Table.AddColumn(#\"Day name\", \"quarter_n_year\", each [Year] * 10 + [Quarter]),\n        #\"Inserted Merged Column\" = Table.AddColumn(#\"Added custom\", \"Quarter and Year\", each Text.Combine({Text.From([Year], \"en-US\"), \" Q\", Text.From([Quarter], \"en-US\")}), type text),\n        #\"Changed column type\" = Table.TransformColumnTypes(#\"Inserted Merged Column\", {{\"Is After Current Date\", type logical}, {\"Month Name\", type text}, {\"Month Name Short\", type text}, {\"quarter_n_year\", Int64.Type}}),\n        #\"Rename columns\" = \n        let\n            Source = #\"Changed column type\",\n            ColumnNames = Table.ColumnNames(Source),\n            RenamedColumns = List.Transform(ColumnNames, each Text.Replace(Text.Lower(_), \" \", \"_\")),\n            RenamedTable = Table.RenameColumns(Source, List.Zip({ColumnNames, RenamedColumns}))\n        in\n            RenamedTable\nin\n    #\"Rename columns\";\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared calendar_DataDestination = let\r\n  Pattern = Lakehouse.Contents([]),\r\n  Navigation_1 = Pattern{[workspaceId = \"6c54ba89-e065-4ece-84e8-ee42ca7bed9e\"]}[Data],\r\n  Navigation_2 = Navigation_1{[lakehouseId = \"a31bf51a-e024-4a84-a8cc-dc3e9d7f6488\"]}[Data],\r\n  TableNavigation = Navigation_2{[Id = \"calendar\", ItemKind = \"Table\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(TableNavigation, #table(type table[date = nullable Date.Type, month = Int64.Type, month_name = nullable Text.Type, month_name_short = nullable Text.Type, quarter = Int64.Type, year = Int64.Type, is_after_current_date = nullable Logical.Type, week = Int64.Type, day_of_week = Int64.Type, day_of_week_name = Text.Type, quarter_n_year = nullable Int64.Type, quarter_and_year = Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"DefaultStaging\"]\r\nshared calendar_WriteToDataDestination = let\r\n  calendar_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = calendar_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], calendar_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  calendar_WriteToDataDestination;\r\nshared calendar_TransformForWriteToDataDestination = let\r\n    ColumnMappings = {[SourceColumnName = \"date\", DestinationColumnName = \"date\"], [SourceColumnName = \"month\", DestinationColumnName = \"month\"], [SourceColumnName = \"month_name\", DestinationColumnName = \"month_name\"], [SourceColumnName = \"month_name_short\", DestinationColumnName = \"month_name_short\"], [SourceColumnName = \"quarter\", DestinationColumnName = \"quarter\"], [SourceColumnName = \"year\", DestinationColumnName = \"year\"], [SourceColumnName = \"is_after_current_date\", DestinationColumnName = \"is_after_current_date\"], [SourceColumnName = \"week\", DestinationColumnName = \"week\"], [SourceColumnName = \"day_of_week\", DestinationColumnName = \"day_of_week\"], [SourceColumnName = \"day_of_week_name\", DestinationColumnName = \"day_of_week_name\"], [SourceColumnName = \"quarter_n_year\", DestinationColumnName = \"quarter_n_year\"], [SourceColumnName = \"quarter_and_year\", DestinationColumnName = \"quarter_and_year\"]},\r\n    SourceColumns = Table.SelectColumns(calendar, List.Transform(ColumnMappings, each _[SourceColumnName])),\r\n    TargetColumns = Table.RenameColumns(SourceColumns, List.Transform(ColumnMappings, each {_[SourceColumnName], _[DestinationColumnName]}))\r\nin\r\n    TargetColumns;\r\n","connectionOverrides":[{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null}]},"entities":[{"$type":"LocalEntity","name":"calendar","description":"","pbi:refreshPolicy":{"$type":"FullRefreshPolicy","location":"calendar.parquet"},"annotations":[{"name":"ppdf:entityKeys","value":"[]"}],"attributes":[{"name":"date","dataType":"date"},{"name":"month","dataType":"int64"},{"name":"month_name","dataType":"string"},{"name":"month_name_short","dataType":"string"},{"name":"quarter","dataType":"int64"},{"name":"year","dataType":"int64"},{"name":"is_after_current_date","dataType":"boolean"},{"name":"week","dataType":"int64"},{"name":"day_of_week","dataType":"int64"},{"name":"day_of_week_name","dataType":"string"},{"name":"quarter_n_year","dataType":"int64"},{"name":"quarter_and_year","dataType":"string"}]}]}